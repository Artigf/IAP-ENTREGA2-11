<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
    <http:listener-config name="Entrega2API-httpListenerConfig" host="localhost" port="8081" doc:name="HTTP Listener Configuration" />
    <apikit:config name="Entrega2API-config" raml="Entrega2API.raml" consoleEnabled="false" doc:name="Router" />
    <db:mysql-config name="MySQL_Configuration" host="localhost" port="3306" user="root" database="centroeducativo" doc:name="MySQL Configuration" />
	<http:request-config name="HTTP_Request_Configuration" host="pedvalar.webs.upv.es" port="80" doc:name="HTTP Request Configuration"/>
    <flow name="Entrega2API-main">
        <http:listener config-ref="Entrega2API-httpListenerConfig" path="/*" doc:name="HTTP" />
        <apikit:router config-ref="Entrega2API-config" doc:name="APIkit Router" />
        <exception-strategy ref="Entrega2API-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy" />
    </flow>
    <flow name="Entrega2API-console">
        <http:listener config-ref="Entrega2API-httpListenerConfig" path="/console/*" doc:name="HTTP" />
        <apikit:console config-ref="Entrega2API-config" doc:name="APIkit Console" />
    </flow>
    <flow name="put:/nota:application/json:Entrega2API-config">
		<dw:transform-message doc:name="JSON-a-Map" metadata:id="4952d23c-a2e1-4a3f-9dcb-8187e4ff4587">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	alumno: payload.alumno,
	asignatura: payload.asignatura,
	nota: payload.nota
}]]></dw:set-payload>
		</dw:transform-message>
		<db:update config-ref="MySQL_Configuration" doc:name="Actualizar nota">
			<db:parameterized-query><![CDATA[UPDATE alumno_asignatura SET nota=#[payload.nota] where alumno=#[payload.alumno] and asignatura=#[payload.asignatura]]]></db:parameterized-query>

		</db:update>
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload" />
    </flow>
    <flow name="delete:/nota:application/json:Entrega2API-config">
		<dw:transform-message doc:name="JSON-a-Map" metadata:id="ed0c71ce-b39d-443a-a666-e313a540005b">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
		</dw:transform-message>
		<db:update config-ref="MySQL_Configuration" doc:name="Eliminar nota">
			<db:parameterized-query><![CDATA[UPDATE alumno_asignatura SET nota=null where alumno=#[payload.alumno] and asignatura=#[payload.asignatura]]]></db:parameterized-query>
		</db:update>

        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload" />
    </flow>
    <flow name="get:/alumnos:Entrega2API-config">
		<set-variable variableName="accept" value="#[message.inboundProperties.accept]" doc:name="Accept JSON"/>
        <db:select config-ref="MySQL_Configuration" doc:name="Recopila alumnos">
            <db:parameterized-query><![CDATA[Select * from alumnos]]></db:parameterized-query>
        </db:select>
		<choice doc:name="Choice">
			<when expression="#[flowVars.accept==&quot;application/json&quot;]">
				<json:object-to-json-transformer doc:name="Lista alumnos en JSON"/>
			</when>
			<otherwise>
				<dw:transform-message doc:name="Lista alumnos en XML" metadata:id="bff2b5f9-d995-4678-91ed-3ecd77872e56">
					<dw:set-payload><![CDATA[%dw 1.0
%output application/xml
---
{
	alumnos: {
		(payload map ((payload01 , indexOfPayload01) -> {
			alumno: {
				apellidos: payload01.apellidos,
				nombre: payload01.nombre,
				dni: payload01.dni
			}
		}))
	}
}]]></dw:set-payload>
				</dw:transform-message>
			</otherwise>
		</choice>

    </flow>
    <flow name="get:/asignaturas:Entrega2API-config">
		<set-variable variableName="accept" value="#[message.inboundProperties.accept]" doc:name="Accept JSON"/>
		<choice doc:name="hay o no filtro por a&#241;o">
			<when expression="#[message.inboundProperties.'http.query.params'.size() == 0]">
				<db:select config-ref="MySQL_Configuration" doc:name="Recopila asignaturas">
					<db:parameterized-query><![CDATA[SELECT * FROM asignaturas]]></db:parameterized-query>
				</db:select>
				<choice doc:name="Choice XML-JSON">
					<when expression="#[flowVars.accept==&quot;application/json&quot;]">
						<json:object-to-json-transformer doc:name="Lista asignaturas en JSON"/>
					</when>
					<otherwise>
						<dw:transform-message doc:name="Lista asignaturas en XML" metadata:id="b38f1746-f701-415e-aff8-23d5bab8d3e8">
							<dw:set-payload><![CDATA[%dw 1.0
%output application/xml
---
{
	asignaturas: {
		(payload map ((payload01 , indexOfPayload01) -> {
			asignatura: {
				id: payload01.id_asig,
				acronimo: payload01.acronimo,
				anyo: payload01.anyo
			}
		}))
	}
}]]></dw:set-payload>
						</dw:transform-message>
					</otherwise>
				</choice>
			</when>
			<otherwise>
				<db:select config-ref="MySQL_Configuration" doc:name="Recopila asignaturas de un a&#241;o">
					<db:parameterized-query><![CDATA[SELECT * FROM asignaturas WHERE anyo=#[message.inboundProperties.'http.query.params'.año]]]></db:parameterized-query>
				</db:select>
				<choice doc:name="Choice XML-JSON">
					<when expression="#[flowVars.accept==&quot;application/json&quot;]">
						<json:object-to-json-transformer doc:name="Lista de asignaturas en JSON"/>
					</when>
					<otherwise>
						<dw:transform-message doc:name="Lista de asignaturas en XML" metadata:id="a2804f8a-12b4-4c76-9f23-10879dbf7024">
							<dw:set-payload><![CDATA[%dw 1.0
%output application/xml
---
{
	asignaturas: {
		(payload map ((payload01 , indexOfPayload01) -> {
			asignatura: {
				id: payload01.id_asig,
				acronimo: payload01.acronimo,
				anyo: payload01.anyo
			}
		}))
	}
}]]></dw:set-payload>
						</dw:transform-message>
					</otherwise>
				</choice>
			</otherwise>
		</choice>

    </flow>

    <flow name="get:/alumnos/{dni}:Entrega2API-config">
		<set-variable variableName="Accept" value="#[message.inboundProperties.accept]" doc:name="Accept JSON"/>
		<scatter-gather doc:name="Scatter-Gather">
			<db:select config-ref="MySQL_Configuration" doc:name="Recoge datos alumno">
				<db:parameterized-query><![CDATA[Select * from alumnos where dni=#[message.inboundProperties.'http.uri.params'.dni]]]></db:parameterized-query>
			</db:select>
			<db:select config-ref="MySQL_Configuration" doc:name="Recoge las asignaturas del alumno">
				<db:parameterized-query><![CDATA[Select asignatura, nota from alumno_asignatura where alumno=#[message.inboundProperties.'http.uri.params'.dni]]]></db:parameterized-query>
			</db:select>
			<processor-chain>
				<http:request config-ref="HTTP_Request_Configuration" path="/iap/gva/rest/direccion/{dni}" method="GET" doc:name="Recoge la direcci&#243;n postal">
					<http:request-builder>
						<http:uri-param paramName="dni" value="#[message.inboundProperties.'http.uri.params'.dni]"/>
						<http:header headerName="accept" value="application/json"/>
					</http:request-builder>
				</http:request>
				<dw:transform-message doc:name="DP a JSON" metadata:id="0779930a-4e21-4fb1-bb9c-d7b331044b3b">
					<dw:input-payload mimeType="application/json"/>
					<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	codigoPostal: payload.codigoPostal,
	ciudad: payload.ciudad,
	direccion: payload.direccion
}]]></dw:set-payload>
				</dw:transform-message>
			</processor-chain>
		</scatter-gather>
		<dw:transform-message doc:name="Datos a JSON">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---

{
  "Alumno": payload[0],
  "notas": payload[1],
  "dirección": payload[2]
}]]></dw:set-payload>
		</dw:transform-message>
		<choice doc:name="Choice">
			<when expression="#[flowVars.accept==&quot;application/json&quot;]">
				<set-payload value="#[payload]" doc:name="Muestra el expediente"/>
			</when>
			<otherwise>
				<dw:transform-message doc:name="JSON a expediente en XML" metadata:id="66608d66-1875-4413-be6d-312cf7415eea">
					<dw:input-payload mimeType="application/json"/>
					<dw:set-payload><![CDATA[%dw 1.0
%output application/xml
---
{
	expediente: {
		Alumno: {
			apellidos: payload.Alumno.apellidos,
			nombre: payload.Alumno.nombre,
			dni: payload.Alumno.dni
		},
		notas: {
			(payload.notas map ((nota , indexOfNota) -> {
				nota: {
					valor: nota.nota,
					asignatura: nota.asignatura
				}
			}))
		},
		direccion: {
			codigoPostal: payload.direccion.codigoPostal,
			ciudad: payload.direccion.ciudad,
			direccion: payload.direccion.direccion
		}
	}
}]]></dw:set-payload>
				</dw:transform-message>
			</otherwise>
		</choice>


    </flow>
    <flow name="get:/asignaturas/{id}:Entrega2API-config">
		<set-variable variableName="Accept" value="#[message.inboundProperties.accept]" doc:name="Accept JSON"/>
		<scatter-gather doc:name="Scatter-Gather">
			<db:select config-ref="MySQL_Configuration" doc:name="Recoge datos de asignatura">
				<db:parameterized-query><![CDATA[Select * from asignaturas where id_asig=#[message.inboundProperties.'http.uri.params'.id]]]></db:parameterized-query>
			</db:select>
			<db:select config-ref="MySQL_Configuration" doc:name="Recoge alumnos de asignatura">
				<db:parameterized-query><![CDATA[Select A.* from alumnos A, alumno_asignatura S where A.dni = S.alumno and S.asignatura =#[message.inboundProperties.'http.uri.params'.id]]]></db:parameterized-query>
			</db:select>
			<db:select config-ref="MySQL_Configuration" doc:name="Recoge profesores de asignatura">
				<db:parameterized-query><![CDATA[Select P.* from profesores P, profesor_asignatura S where P.dni = S.profesor and S.asignatura =#[message.inboundProperties.'http.uri.params'.id]]]></db:parameterized-query>
			</db:select>
		</scatter-gather>
		<dw:transform-message doc:name="Datos en JSON">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---

{
  "detalles-asignatura": payload[0][0],
  "alumnos": payload[1],
  "profesores": payload[2]
}]]></dw:set-payload>
		</dw:transform-message>
		<choice doc:name="Choice">
			<when expression="#[flowVars.accept==&quot;application/json&quot;]">
				<set-payload value="#[payload]" doc:name="Muestra datos en JSON"/>
			</when>
			<otherwise>
				<dw:transform-message doc:name="Datos de JSON a XML" metadata:id="0579de45-7046-4aaf-9378-22034897015b">
					<dw:input-payload mimeType="application/json"/>
					<dw:set-payload><![CDATA[%dw 1.0
%output application/xml
---
{
	detalles-asignatura: {
		creditos: payload.detalles-asignatura.creditos,
		nombre: payload.detalles-asignatura.nombre,
		cuatrimestre: payload.detalles-asignatura.cuatrimestre,
		id_asig: payload.detalles-asignatura.id_asig,
		acronimo: payload.detalles-asignatura.acronimo,
		anyo: payload.detalles-asignatura.anyo,
		curso: payload.detalles-asignatura.curso,
		alumnos: {
			(payload.alumnos map ((alumno , indexOfAlumno) -> {
				alumno: {
					apellidos: alumno.apellidos,
					nombre: alumno.nombre,
					dni: alumno.dni
				}
			}))
		},
		profesores: {
			(payload.profesores map ((profesore , indexOfProfesore) -> {
				profesor: {
					apellidos: profesore.apellidos,
					nombre: profesore.nombre,
					dni: profesore.dni
				}
			}))
		}
	}
}]]></dw:set-payload>
				</dw:transform-message>
			</otherwise>
		</choice>


    </flow>
    <apikit:mapping-exception-strategy name="Entrega2API-apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
</mule>
